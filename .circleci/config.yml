version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
    - image: circleci/openjdk:8-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
    - checkout # check out source code to working directory
    - restore_cache: # restore the saved cache after the first run or if `build.gradle` has changed
        # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
        key: boilerplate-{{ checksum "build.gradle" }}
    - run: ./gradlew build # gets the project dependencies
    - save_cache: # saves the project dependencies
        paths:
        - ~/.gradle
        key: boilerplate-{{ checksum "build.gradle" }}
    - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
        # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
        path: build/reports/tests/test
  test: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
    - image: circleci/openjdk:8-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
    - checkout # check out source code to working directory
    - restore_cache: # restore the saved cache after the first run or if `build.gradle` has changed
        # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
        key: boilerplate-{{ checksum "build.gradle" }}
    - run: ./gradlew testClasses # gets the project dependencies
    - save_cache: # saves the project dependencies
        paths:
        - ~/.gradle
        key: boilerplate-{{ checksum "build.gradle" }}

workflows:
  version: 2
  build_and_test:
    jobs:
    - build
    - test
